{"version":3,"sources":["../../src/templates/containerDuckTemplate.js"],"names":["getTemplate","name"],"mappings":";;;;;AAAA,IAAMA,cAAc,SAAdA,WAAc,CAACC,IAAD,EAAU;AAC7B,kMAKQA,IALR,iCAKwCA,IALxC,qHAOiDA,IAPjD,+BAScA,IATd,oFAeKA,IAfL,qCAqBCA,IArBD,6BAsBCA,IAtBD,kgBAqC6DA,IArC7D;AAwCA,CAzCD;;kBA2CeD,W","file":"containerDuckTemplate.js","sourcesContent":["const getTemplate = (name) => {\n\treturn (`// @flow\nimport React, { Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport ${name}View from '../components/${name}';\nimport baseSelector from '../../../utils/baseSelector';\nimport { actions, REDUCER_NAME } from '../ducks/${name}Duck';\n\nexport class ${name} extends Component {\n\n\tstate = {};\n\n\trender() {\n\t\treturn (\n\t\t\t<${name}View />\n\t\t);\n\t}\n}\n\n\n${name}.defaultProps = {};\n${name}.propTypes = {};\n\nfunction mapStoreToProps(state, ownProps) {\n\treturn {\n\t\t// Loading the default reducer state into the container [partnerContactsAll]\n\t\t// this should make life easier if reducer name changes --> cause one single place and constant\n\t\t[REDUCER_NAME]: baseSelector.listByKey(state, REDUCER_NAME),\n\t};\n}\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({\n\t\t...actions,\n\t}, dispatch);\n}\n\nexport default connect(mapStoreToProps, mapDispatchToProps)(${name});\n\n`);\n};\n\nexport default getTemplate;\n"]}
{"version":3,"sources":["../../src/templates/reducerTemplate.js"],"names":["getTemplate","name","nameLower","toLowerCase","nameUpper","toUpperCase"],"mappings":";;;;;AAAA,IAAMA,cAAc,SAAdA,WAAc,CAACC,IAAD,EAAU;AAC7B,KAAMC,YAAYD,KAAKE,WAAL,EAAlB;AACA,KAAMC,YAAYH,KAAKI,WAAL,EAAlB;AACA,gCACUH,SADV,qCACmDD,IADnD,6SASkCC,SATlC,oLAiBID,IAjBJ,mIAuBkCC,SAvBlC,6FA0B0BD,IA1B1B,+HAgCKA,IAhCL,miBA+DOC,SA/DP,wBAgEGA,SAhEH,gBAgEuBE,SAhEvB,2CAiEGF,SAjEH,gBAiEuBE,SAjEvB,2CAkEGF,SAlEH,gBAkEuBE,SAlEvB,yCAmEGF,SAnEH,gBAmEuBE,SAnEvB,oJA0EEH,IA1EF,kLAoF8BC,SApF9B;AAwFA,CA3FD;;kBA6FeF,W","file":"reducerTemplate.js","sourcesContent":["const getTemplate = (name) => {\n\tconst nameLower = name.toLowerCase();\n\tconst nameUpper = name.toUpperCase();\n\treturn (`// @flow\nimport { ${nameLower}Actions } from '../constants/${name}Constants';\nimport { handleActions } from 'redux-actions';\nimport { Logger } from 'gef-ui-logging';\nimport { pkclListResponseValidate } from '../../../utils/responseValidator';\nimport updeep from 'updeep';\n\nconst _success = {\n\tnext(state, action) {\n\t\tif (!pkclListResponseValidate('${nameLower}Reducer', action.payload)) {\n\t\t\treturn state;\n\t\t}\n\t\treturn {\n\t\t\t...state,\n\t\t\tisFetching: false,\n\t\t\terror     : false,\n\t\t\tloaded    : true,\n\t\t\t${name}   : action.payload,\n\t\t\t};\n\t},\n};\nconst _loadMore = {\n\tnext(state, action) {\n\t\tif (!pkclListResponseValidate('${nameLower}Reducer', action.payload)) {\n\t\t\treturn state;\n\t\t}\n\t\tconst prevData = state.${name}.data;\n\t\treturn updeep(\n\t\t\t{\n\t\t\t\tisFetching: false,\n\t\t\t\terror: false,\n\t\t\t\tloaded: true,\n\t\t\t\t${name}: {\n\t\t\t\t\tdata: [\n\t\t\t\t\t\t...prevData,\n\t\t\t\t\t\t...action.payload.data,\n\t\t\t\t\t],\n\t\t\t\t\tpageMetaData: action.payload.pageMetaData,\n\t\t\t\t}\n\t\t\t}, state);\n\t},\n};\nconst _error = {\n\tnext(state) {\n\t\treturn updeep(\n\t\t\t{\n\t\t\t\tisFetching: false,\n\t\t\t\terror     : true,\n\t\t\t}, state);\n\t},\n};\n\nconst _request = {\n\tnext(state, action) {\n\t\treturn updeep(\n\t\t\t{\n\t\t\t\tisFetching : true,\n\t\t\t\terror      : false,\n\t\t\t\tloaded     : false,\n\t\t\t}, state);\n\t},\n};\n\nconst ${nameLower}Reducer = {\n\t[${nameLower}Actions.${nameUpper}_REQUEST]          : _request,\n\t[${nameLower}Actions.${nameUpper}_SUCCESS]          : _success,\n\t[${nameLower}Actions.${nameUpper}_ERROR]            : _error,\n\t[${nameLower}Actions.${nameUpper}_SUCCESS_LOADMORE]: _loadMore,\n};\n\nexport const initialState = {\n\tisFetching : false,\n\terror      : false,\n\tloaded     : false,\n\t${name}    : {\n\t\t\"data\": [],\n\t\t\"pageMetaData\": {\n\t\t\t\"size\": 1,\n\t\t\t\"page\": 1,\n\t\t\t\"moreRows\": false,\n\t\t},\n\t},\n};\n\nexport default handleActions(${nameLower}Reducer, initialState);\n\n`\n\t);\n};\n\nexport default getTemplate;\n"]}